package com.example;
import java.util.HashMap;

interface Forma {
    void desenhar();
}

class Circulo implements Forma {
    private String cor;
    private int posicaoX;
    private int posicaoY;
    private int raio;

    public Circulo(String cor){
        this.cor = cor;
    }

    public void setPosicaoX(int x) {
        this.posicaoX = x;
    }

    public void setPosicaoY(int y) {
        this.posicaoY = y;
    }

    public void setRaio(int raio) {
        this.raio = raio;
    }

    @Override
    public void desenhar() {
        System.out.println("Desenhar Circulo com a cor " + cor + ", na posicao x:" + posicaoX + ", e y:" + posicaoY + ", e com o raio " + raio);
    }
}

class FormaFactory {

    private static final HashMap circuloMap = new HashMap();

    public static Forma getCirculo(String cor) {
        Circulo circulo = (Circulo)circuloMap.get(cor);

        if(circulo == null) {
            circulo = new Circulo(cor);
            circuloMap.put(cor, circulo);
            System.out.println("A Criar um circulo com a cor: " + cor);
        }
        return circulo;
    }
}

public class Main {
    private static final String cores[] = { "Verde", "Amarelo", "Vermelho", "Azul", "Branco" };
    public static void main(String[] args) {

            for(int i=0; i < 30; ++i) {
                Circulo circulo = (Circulo)FormaFactory.getCirculo(getCorAleatoria());
                circulo.setPosicaoX(getPosicaoXAleatoria());
                circulo.setPosicaoY(getPosicaoYAleatoria());
                circulo.setRaio(150);
                circulo.desenhar();
            }
        }

        private static String getCorAleatoria() {
            return cores[(int)(Math.random()*cores.length)];
        }
        private static int getPosicaoXAleatoria() {
            return (int)(Math.random()*100 );
        }
        private static int getPosicaoYAleatoria() {
            return (int)(Math.random()*100);
        }
}